name: Backend API

on:
  push:
    branches:
      - main
    paths:
    - 'src/*'

env:
  PYTHON_VERSION: 3.8

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Build API base image
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION}}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./requirements.txt

    - name: Build & Push Docker Image
      DOCKER_REPOSITORY: backend-technical-api
      IMAGE_TAG: v1.0
      run: |
        echo "${{ secrets.DOCKERPASSWORD }}" | docker login -u ehiaig --password-stdin
        docker build -t ehiaig/$DOCKER_REPOSITORY:$IMAGE_TAG .
        docker push ehiaig/$DOCKER_REPOSITORY:$IMAGE_TAG

    - name: Start API service 
      run: docker-compose up -d
      - name: Run unit tests
      if: ${{github.ref != 'refs/heads/main'}}
      run: bash docker_scripts/run_unit_tests.sh

    - name: Run tests with coverage
      if: ${{github.ref != 'refs/heads/main'}}
      uses: JamesIves/github-pages-deploy-action@4.1.2
      with:
        branch: gh-pages
        folder: docs

    - name: Deploy coverage report
      if: ${{github.ref != 'refs/heads/main'}}
      run: bash docker_scripts/run_test_coverage.sh

# name: Backend API

# on:
#   push:
#     branches:
#       - main
#     paths:
#     - 'src/*'
      
# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Build API base image
#       uses: actions/setup-python@v2
#       with:
#         python-version: 3.8
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r ./requirements.txt
#     - name: Build & Push Image
#       run: |
#         echo "${{ secrets.DOCKERPASSWORD }}" | docker login -u ehiaig --password-stdin
#         docker image build -t ehiaig/backend-technical-test:v1.0 .
#         docker push ehiaig/backend-technical-test:v1.0