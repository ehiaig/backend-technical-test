name: API validation

on:
  pull_request:
    paths:
    - 'src/*'
    branches:
    - master
  push:
    paths:
    - 'src/*'
    branches:
    - master
env:
  PYTHON_VERSION: 3.8
  POETRY_VERSION: 3.8
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build API base image
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION}}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./python/requirements.txt
    - name: Build & Push Image
      run: |
        cd ./src
        echo "${{ secrets.DOCKERPASSWORD }}" | docker login -u ehiaig --password-stdin
        docker image build -t ehiaig/backend-technical-api:v1.0 .
        docker push ehiaig/backend-technical-api:v1.0
    - name: Start services for API
      run: docker-compose up -d
      - name: Run unit tests
      if: ${{github.ref != 'refs/heads/master'}}
      run: bash docker_scripts/run_unit_tests.sh
    - name: Run tests with coverage
      if: ${{github.ref != 'refs/heads/master'}}
      uses: JamesIves/github-pages-deploy-action@4.1.2
      with:
        branch: gh-pages
        folder: docs
    - name: Deploy coverage report
      if: ${{github.ref != 'refs/heads/master'}}
      run: bash docker_scripts/run_test_coverage.sh
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Build API base image
  #       run: |
  #           docker build \
  #             --build-arg PYTHON_VERSION=${{ env.PYTHON_VERSION}} \
  #             --build-arg POETRY_VERSION=${{ env.POETRY_VERSION}} \
  #             -t backend-technical-api .
  #     - name: Start services for API
  #       run: docker-compose up -d
  #     - name: Run unit tests
  #       if: ${{github.ref != 'refs/heads/master'}}
  #       run: bash docker_scripts/run_unit_tests.sh
  #     - name: Run tests with coverage
  #       if: ${{github.ref != 'refs/heads/master'}}
  #       uses: JamesIves/github-pages-deploy-action@4.1.2
  #       with:
  #         branch: gh-pages
  #         folder: docs
  #     - name: Deploy coverage report
  #       if: ${{github.ref != 'refs/heads/master'}}
  #       run: bash docker_scripts/run_test_coverage.sh





      # - name: Set up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: ${{ matrix.python-version }}
      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install flake8
      #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # - name: Static Code Linting with flake8
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # - name: Unit Testing with pytest
      #   env:
      #     # add environment variables for tests
      #   run: |
      #     pytest
      